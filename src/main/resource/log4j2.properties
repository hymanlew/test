# 这个用于设置log4j2自身内部的信息输出,可以不设置,当设置成trace时,会看到log4j2内部各种详细输出
status = error
dest = err
name = PropertiesConfig

#公共变量
#文件路径
property.filePath=logs
property.filePattern=logs/%d{yyyy}/%d{MM}
#输出格式
property.layoutPattern=%-d{yyyy-MM-dd HH:mm:ss} [ %p ] [ %c ] %m%n


### RollingFile
appender.rolling.type = RollingFile
appender.rolling.name = FILE
appender.rolling.append = true
appender.rolling.fileName = @logpath@
appender.rolling.filePattern = @logPattern@
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d - %c.%M [%t] %p %X{mdc} %x - %m%n
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true


# 级别过滤（过滤日志记录）
#filters = threshold
filter.threshold.type = ThresholdFilter
# 只记录debug级别以上的日志，大小写无关：(ALL<)TRACE<DEBUG<INFO<WARN<ERROR<FATAL(<OFF)
filter.threshold.level = debug

# 根记录器，所有记录器的父辈
rootLogger.level = debug

appender.console.type = Console
appender.console.name = STDOUT
appender.console.target = SYSTEM_OUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = ${layoutPattern}
rootLogger.appenderRef.stdout.ref = STDOUT


log4j.logger.org.springframework.jdbc.core.JdbcTemplate=debug